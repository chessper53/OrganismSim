html, body {
  margin: 0;
  padding: 0;
  height: 100%;
  overflow: hidden;
}

.dashboard-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  height: 100vh; /* Full height */
  width: 100vw;  /* Full width */
  margin: 0;
  padding: 0;
}

.simulation-box {
  position: relative;
  width: 100vw;
  height: calc(100vh - 50px); 
  background-color: white;
  overflow: hidden;
  background-image: linear-gradient(90deg, rgba(0,0,0,0.1) 1px, transparent 1px), linear-gradient(rgba(0,0,0,0.1) 1px, transparent 1px);
  background-size: 20px 20px; 
}

.organism {
  position: absolute;
  width: 20px;
  height: 20px;
  border-radius: 50%;
}

.faction-info {
  display: flex;
  flex-direction: column; /* Stack the image and text vertically */
  align-items: center;
  width: 100%; /* Ensure equal space for each faction */
}

.faction-info img {
  margin-bottom: 5px; /* Add space between the image and the number */
  width: 50px;
  height: 50px;
  filter: drop-shadow(0px 0px 10px rgb(255, 255, 255, 10));
}

.faction-info p {
  color: black;
  font-weight: bolder;
  font-size: 20px;
}

.simulation-header {
  width: 100%;
}


.counter-Div {
  display: flex;
  justify-content: center; /* Center the whole counter block */
  align-items: center;
  width: 100%; /* Ensure the counter takes up full width */
  position: absolute;
  top: 10px; /* Position the counter at the top */
}

.counter-Div .faction-info {
  flex: 1; /* Make each faction take equal space */
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 0 10px; /* Reduce distance between factions and exit */
}

.counter-Div .edit-button {
  width: 40px;
  height: 40px;
  cursor: pointer;
  margin: 0 20px; /* Smaller space between button and factions */
}



.counter-Div img {
  width: 40px;
  height: 40px;
}

.counter-Div * {
  text-align: center;
}

.speed-button{
  height: 10px;
  width: 0px;
  cursor: pointer;

}

.analytics-Button {
  height: 40px;
  width: 40px;
  position: absolute;
  right: 0;
  top: 0;
  margin: 1%;
  cursor: pointer;
}

